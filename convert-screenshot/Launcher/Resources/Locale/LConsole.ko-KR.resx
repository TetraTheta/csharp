<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HelpDefaultValue" xml:space="preserve">
    <value>기본값</value>
  </data>
  <data name="HelpValidValues" xml:space="preserve">
    <value>유효한 값</value>
  </data>
  <data name="HelpProgramDescription" xml:space="preserve">
    <value>게임 스크린샷의 UID를 숨기고, 자르거나 크기를 조정한 다음, WebP 형식으로 변환합니다.\n스크린샷의 크기는 1920x1080이어야 합니다. 그렇지 않으면 '이미 처리된 게임 스크린샷'으로 간주되어 크기 조정만 적용됩니다.</value>
  </data>
  <data name="HelpSwtEnglish_1" xml:space="preserve">
    <value>메시지 언어를 영어로 설정합니다.</value>
  </data>
  <data name="HelpSwtHelp_1" xml:space="preserve">
    <value>도움말을 표시합니다.</value>
  </data>
  <data name="HelpSwtVerbose_1" xml:space="preserve">
    <value>디버깅을 위한 자세한 메시지를 표시합니다.</value>
  </data>
  <data name="HelpSwtVersion_1" xml:space="preserve">
    <value>버전 정보를 표시합니다.</value>
  </data>
  <data name="HelpGameDescription" xml:space="preserve">
    <value>UID 숨기기, 자르기 영역 등은 게임 제목에 따라 결정됩니다.</value>
  </data>
  <data name="HelpGameTOF_1" xml:space="preserve">
    <value>타워 오브 판타지</value>
  </data>
  <data name="HelpGameTOF_2" xml:space="preserve">
    <value>: tower-of-fantasy, tf, tof</value>
  </data>
  <data name="HelpGameWuWa_1" xml:space="preserve">
    <value>명조: 워더링 웨이브</value>
  </data>
  <data name="HelpGameWuWa_2" xml:space="preserve">
    <value>: wuthering-waves, wuwa, ww</value>
  </data>
  <data name="HelpOperationDescription" xml:space="preserve">
    <value>스크린샷의 상황에 따라 자를 영역이 정해집니다. UID 영역은 자동으로 가려집니다.\n스크린샷을 자른 후, WebP 형식으로 변환됩니다.</value>
  </data>
  <data name="HelpOpBackground_1" xml:space="preserve">
    <value>스크린샷의 상황은 '배경 대사'입니다.</value>
  </data>
  <data name="HelpOpBackground_2" xml:space="preserve">
    <value>대사가 출력되는 동안 자유롭게 움직일 수 있습니다.</value>
  </data>
  <data name="HelpOpBackground_3" xml:space="preserve">
    <value>: background, b, bg</value>
  </data>
  <data name="HelpOpCenter_1" xml:space="preserve">
    <value>스크린샷의 상황은 '중앙 대사'입니다.</value>
  </data>
  <data name="HelpOpCenter_2" xml:space="preserve">
    <value>대사가 검은 배경과 함께 화면 중앙에 출력됩니다.</value>
  </data>
  <data name="HelpOpCenter_3" xml:space="preserve">
    <value>: center, c</value>
  </data>
  <data name="HelpOpForeground0_1" xml:space="preserve">
    <value>스크린샷의 상황은 '전경 0 대사'입니다.</value>
  </data>
  <data name="HelpOpForeground0_2" xml:space="preserve">
    <value>대화 선택 옵션이 0개 표시되며, 움직일 수 없습니다.</value>
  </data>
  <data name="HelpOpForeground0_3" xml:space="preserve">
    <value>: foreground0, f0, fg0, foreground-0</value>
  </data>
  <data name="HelpOpForeground1_1" xml:space="preserve">
    <value>스크린샷의 상황은 '전경 1 대사'입니다.</value>
  </data>
  <data name="HelpOpForeground1_2" xml:space="preserve">
    <value>대화 선택 옵션이 1개 표시되며, 움직일 수 없습니다.</value>
  </data>
  <data name="HelpOpForeground1_3" xml:space="preserve">
    <value>: foreground1, f1, fg1, foreground-1</value>
  </data>
  <data name="HelpOpForeground2_1" xml:space="preserve">
    <value>스크린샷의 상황은 '전경 2 대사'입니다.</value>
  </data>
  <data name="HelpOpForeground2_2" xml:space="preserve">
    <value>대화 선택 옵션이 2개 표시되며, 움직일 수 없습니다.</value>
  </data>
  <data name="HelpOpForeground2_3" xml:space="preserve">
    <value>: foreground2, f2, fg2, foreground-2</value>
  </data>
  <data name="HelpOpForeground3_1" xml:space="preserve">
    <value>스크린샷의 상황은 '전경 3 대사'입니다.</value>
  </data>
  <data name="HelpOpForeground3_2" xml:space="preserve">
    <value>대화 선택 옵션이 3개 표시되며, 움직일 수 없습니다.</value>
  </data>
  <data name="HelpOpForeground3_3" xml:space="preserve">
    <value>: foreground3, f3, fg3, foreground-3</value>
  </data>
  <data name="HelpOpForeground4_1" xml:space="preserve">
    <value>스크린샷의 상황은 '전경 4 대사'입니다.</value>
  </data>
  <data name="HelpOpForeground4_2" xml:space="preserve">
    <value>대화 선택 옵션이 4개 표시되며, 움직일 수 없습니다.</value>
  </data>
  <data name="HelpOpForeground4_3" xml:space="preserve">
    <value>: foreground4, f4, fg4, foreground-4</value>
  </data>
  <data name="HelpOpFull_1" xml:space="preserve">
    <value>스크린샷을 자르지 않습니다.</value>
  </data>
  <data name="HelpOpFull_2" xml:space="preserve">
    <value>: full, f</value>
  </data>
  <data name="HelpTargetDescription" xml:space="preserve">
    <value>스크린샷 파일(들)이 위치한 폴더 경로를 지정해야 합니다.</value>
  </data>
  <data name="HelpTgtTarget_1" xml:space="preserve">
    <value>스크린샷 파일(들)이 위치한 폴더 경로.</value>
  </data>
  <data name="HelpTgtTarget_2" xml:space="preserve">
    <value>반드시 존재하는 폴더 경로여야 합니다.</value>
  </data>
  <data name="HelpTgtTarget_3" xml:space="preserve">
    <value>현재 경로</value>
  </data>
  <data name="ErrorFailedToParse" xml:space="preserve">
    <value>다음 인수를 해석하는 데 실패했습니다: </value>
  </data>
</root>